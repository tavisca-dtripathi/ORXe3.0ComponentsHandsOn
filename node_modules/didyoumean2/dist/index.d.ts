import { ReturnTypeEnums } from './enums/ReturnTypeEnums';
import { ThresholdTypeEnums } from './enums/ThresholdTypeEnums';
/**
 * Main function for didyoumean2
 * @param {string} input - string that you are not sure and want to match with `matchList`
 * @param {Object[]|string[]} matchList - List for matching with `input`
 * @param {null|Object|undefined} options - options that allows you to modify the behavior
 * @returns {Array|null|Object|string} - matched result(s), return object if `match` is `{Object[]}`
 */
declare const didYouMean: <T extends string | object>(input: string, matchList: T[], options?: Partial<import("./types").Options> | undefined) => T | T[] | null;
export default didYouMean;
export { ReturnTypeEnums, ThresholdTypeEnums };
//# sourceMappingURL=index.d.ts.map